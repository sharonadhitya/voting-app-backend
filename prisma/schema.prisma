// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  options   PollOption[]
  votes     Vote[]
  userId    String?
  user      User?     @relation(fields: [userId], references: [id])
}

model PollOption {
  id     String @id @default(uuid())
  title  String
  pollId String
  poll   Poll   @relation(fields: [pollId], references: [id], onDelete: Cascade)
  votes  Vote[]
}

model Vote {
  id           Int       @id @default(autoincrement())
  userId       String?   // Allow null for anonymous votes
  sessionId    String?   // Keep for backward compatibility
  pollId       String
  pollOptionId String
  createdAt    DateTime  @default(now())
  pollOption   PollOption @relation(fields: [pollOptionId], references: [id], onDelete: Cascade)
  poll         Poll       @relation(fields: [pollId], references: [id], onDelete: Cascade)
  user         User?      @relation(fields: [userId], references: [id])

  // Update constraints to handle both user and session-based votes
  @@unique([userId, pollId])
  @@unique([sessionId, pollId])
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  passwordHash  String
  name          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  polls         Poll[]
  votes         Vote[]   // Add this relation
}